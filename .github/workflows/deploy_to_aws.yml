name: Deploy to AWS

on:
  workflow_dispatch:
    inputs:
      terraform_mode:
        description: "Select terraform operation"
        type: choice
        required: true
        default: 'terraform-plan'
        options:
          - 'terraform-plan'
          - 'terraform-apply'
          - 'terraform-plan_for_destroy'
          - 'terraform-destroy'
          
env:
  AWS_REGION: eu-west-3
  TERRAFORM_DIR: "./terraform"
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Print inputs
      run: echo "${{ toJSON(github.event.inputs) }}"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Save SSH keys under ssh_keys for GitHub Action
      run: |
        echo "${{ secrets.RSA_KEY_PUB }}" > ./terraform/ssh_keys/my-rsa-key.pub
        ls -als ./terraform/ssh_keys/*
        echo "${{ secrets.RSA_KEY_PRIV }}" > ./terraform/ssh_keys/my-rsa-key
        ls -als ./terraform/ssh_keys/*

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Print assumed role
      run: aws sts get-caller-identity

    - name: Check S3 buckets
      run: aws s3 ls
          
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform init
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        terraform init
        
    - name: Terraform Plan
      if: ${{ inputs.terraform_mode == 'terraform-plan' }} || ${{ inputs.terraform_mode == 'terraform-apply' }}
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        terraform plan

    - name: Terraform Apply
      if: ${{ inputs.terraform_mode == 'terraform-apply' }}
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        echo "terraform apply"

    - name: Terraform Plan for destroy
      if: ${{ inputs.terraform_mode == 'terraform-plan_for_destroy' }} || ${{ inputs.terraform_mode == 'terraform-destroy' }}
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        terraform plan -destroy
  
    - name: Terraform destroy
      if: ${{ inputs.terraform_mode == 'terraform-destroy' }}
      run: |
        cd ${{ env.TERRAFORM_DIR }}
        echo "terraform destroy"